{"version":3,"sources":["components/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section.js","components/Notifications.js","components/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","type","className","styles","btn","name","onClick","title","children","Notifications","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","toFixed","handleFeedback","setState","prevState","props","step","this","Section","Component","defaultProps","ReactDom","render","document","querySelector","module","exports"],"mappings":"yNAuBeA,MApBf,YAAsE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAC5C,OACI,gCACI,uCAAWJ,KACX,0CAAcC,KACd,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,W,gBC4BGC,MAlCf,YAA+E,IAApDC,EAAmD,EAAnDA,QACvB,OACI,gCACI,wBACIC,KAAK,SACLC,UAAWC,IAAOC,IAClBC,KAAK,OACLC,QAAS,WAAQN,EAAQ,SAJ7B,kBAQA,wBACIC,KAAK,SACLC,UAAWC,IAAOC,IAClBC,KAAK,UACLC,QAAS,WAAQN,EAAQ,YAJ7B,qBAQA,wBACIC,KAAK,SACLC,UAAWC,IAAOC,IAClBC,KAAK,MACLC,QAAS,kBAAMN,EAAQ,QAJ3B,qBCZGP,MATf,YAAwC,IAAnBc,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACxB,OACI,qCACI,6BAAKD,IACJC,MCIEC,MARf,YAAqC,IAAZC,EAAW,EAAXA,QACrB,OACI,mCACI,6BAAKA,OCCXC,E,4MAKFC,MAAQ,CACJlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTiB,mBAAqB,WAAO,IAAD,EACQ,EAAKD,MAEpC,OAHuB,EACflB,KADe,EACTC,QADS,EACAC,K,EAK3BkB,gCAAkC,WAAO,IAC7BpB,EAAS,EAAKkB,MAAdlB,KAER,OADeqB,KAAKC,MAAc,IAAPtB,EAAc,EAAKmB,sBAAsBI,QAAQ,I,EAIhFC,eAAiB,SAAAb,GACb,EAAKc,UAAS,SAAAC,GAAS,sBAClBf,EAAOe,EAAUf,GAAQ,EAAKgB,MAAMC,U,uDAsBnC,IACE5B,EAAS6B,KAAKX,MAAdlB,KACAC,EAAY4B,KAAKX,MAAjBjB,QACAC,EAAQ2B,KAAKX,MAAbhB,IAER,OACI,gCACI,cAAC4B,EAAD,CAASjB,MAAM,wBAAf,SACI,cAAC,EAAD,CACIP,QAASuB,KAAKL,mBAMrBK,KAAKV,qBAAuB,EACzB,cAACW,EAAD,CAASjB,MAAM,aAAf,SACI,cAAC,EAAD,CACIb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO0B,KAAKV,qBACZf,mBAAoByB,KAAKT,sCAIjC,cAAC,EAAD,CAAeJ,QAAQ,6B,GAzEzBe,aAAZd,EACKe,aAAe,CAClBJ,KAAM,GA8ECX,QClFfgB,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,cAAc,W,kBCH/CC,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.3e00335a.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction Statistics({good, neutral, bad, total, positivePercentage}) {\r\n    return (\r\n        <div>\r\n            <p>Good: { good }</p>\r\n            <p>Neutral: { neutral }</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {positivePercentage}%</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nStatistics.propTypes = {\r\n    good: propTypes.number.isRequired,\r\n    neutral: propTypes.number.isRequired,\r\n    bad: propTypes.number.isRequired,\r\n    total: propTypes.number.isRequired,\r\n    positivePercentage: propTypes.string.isRequired\r\n};\r\n\r\nexport default Statistics; ","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options /*handleGood, handleNeutral, handleBad*/}) {\r\n    return (\r\n        <div>\r\n            <button\r\n                type=\"button\"\r\n                className={styles.btn}\r\n                name='good'\r\n                onClick={() => { options('good') }}>\r\n                Good\r\n            </button>\r\n\r\n            <button\r\n                type=\"button\"\r\n                className={styles.btn}\r\n                name='neutral'\r\n                onClick={() => { options('neutral') }}>\r\n                Neutral\r\n            </button>\r\n\r\n            <button\r\n                type=\"button\"\r\n                className={styles.btn}\r\n                name='bad'\r\n                onClick={() => options('bad')}>\r\n                Bad\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: propTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\n\r\nfunction Statistics({title, children}) {\r\n    return (\r\n        <>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\n\r\nfunction Notifications({ message }) {\r\n    return (\r\n        <>\r\n            <h2>{message}</h2>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notifications;","import React, {Component} from 'react';\r\nimport Statistics from './Statistics';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Section from './Section';\r\nimport Notifications from './Notifications';\r\n\r\nclass App extends Component {\r\n    static defaultProps = {\r\n        step: 1\r\n    };\r\n\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    };\r\n\r\n    countTotalFeedback = () => {\r\n        const { good, neutral, bad } = this.state;\r\n        const total = good + neutral + bad;\r\n        return total;\r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const { good } = this.state;\r\n        const result = Math.round((good * 100) / this.countTotalFeedback()).toFixed(0);\r\n        return result;\r\n    };\r\n\r\n    handleFeedback = name => {\r\n        this.setState(prevState => ({\r\n            [name]: prevState[name] + this.props.step\r\n        }));\r\n    };\r\n\r\n    // handleGood = () => {\r\n    //     this.setState((prevState, props) => {\r\n    //         return {good: prevState.good + props.step}\r\n    //     })\r\n    // };\r\n\r\n    // handleNeutral = () => {\r\n    //     this.setState((prevState, props) => {\r\n    //         return {neutral: prevState.neutral + props.step}\r\n    //     })\r\n    // };\r\n\r\n    // handleBad = () => {\r\n    //     this.setState((prevState, props) => {\r\n    //         return {bad: prevState.bad + props.step}\r\n    //     })\r\n    // };\r\n\r\n    render() {\r\n        const { good } = this.state;\r\n        const { neutral } = this.state;\r\n        const { bad } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Section title=\"Please leave feedback\">\r\n                    <FeedbackOptions\r\n                        options={this.handleFeedback}\r\n                        // handleGood={this.handleGood}\r\n                        // handleNeutral={this.handleNeutral}\r\n                        // handleBad={this.handleBad}\r\n                    />\r\n                </Section>\r\n                {this.countTotalFeedback() > 0 ? (\r\n                    <Section title=\"Statistics\">\r\n                        <Statistics\r\n                            good={good}\r\n                            neutral={neutral}\r\n                            bad={bad}\r\n                            total={this.countTotalFeedback()}\r\n                            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n                        />\r\n                    </Section>\r\n                    ) : (\r\n                    <Notifications message=\"No feedback given\"/>  \r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/App';\n\nReactDom.render(<App/>, document.querySelector('#root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__3-4KQ\"};"],"sourceRoot":""}